word_counts = rule('s3://AKIAIOV23F6ZNL5YPRNA:8Gwz48zgzwoYIZv70V4uGDD6%2fdNtHdbFq4kLXGlR@aws-publicdatasets/common-crawl/crawl-002/', 
              'word_counts')

word_counts.param('maxinput', 1)


@word_counts.map
def map(doc, params):
  for word in doc['payload'].split():
    # disco uses \xff and \x00 internally as field
    # delimiters
    if '\xff' in word or '\x00' in word: return
    
    yield str(word.decode('ascii', 'ignore')), 1

@word_counts.reduce
def reduce(iter, params):
	counts = {}
	for key, value in iter:
		counts[key] = counts.get(key,0) + 1

	return counts.iteritems()	